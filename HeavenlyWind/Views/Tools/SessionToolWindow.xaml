<ruic:MetroWindow x:Class="Sakuno.KanColle.Amatsukaze.Views.Tools.SessionToolWindow"
                  x:ClassModifier="internal"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                  xmlns:rb="clr-namespace:Sakuno.KanColle.Amatsukaze;assembly=HeavenlyWind.Base"
                  xmlns:rc="clr-namespace:Sakuno.KanColle.Amatsukaze.Controls"
                  xmlns:ruic="clr-namespace:Sakuno.UserInterface.Controls;assembly=Sakuno.UserInterface"
                  mc:Ignorable="d"
                  Title="{rb:StringResource Main.SessionTool_Title}"
                  Width="800" Height="600"
                  WindowPlacementPreference="{StaticResource WindowPlacementPreference}"
                  UseLayoutRounding="True">
    <ruic:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/HeavenlyWind;component/Styles/Icons/Cross.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </ruic:MetroWindow.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <DockPanel ruic:MetroWindow.IsCaptionBar="True">
            <DockPanel.Resources>
                <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Width" Value="34" />
                    <Setter Property="Height" Value="26" />
                </Style>
            </DockPanel.Resources>

            <Border Height="4" DockPanel.Dock="Bottom" />

            <ruic:WindowSystemButtons WindowChrome.IsHitTestVisibleInChrome="True" DockPanel.Dock="Right" />
            <ToggleButton IsChecked="{Binding Topmost, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" WindowChrome.IsHitTestVisibleInChrome="True" DockPanel.Dock="Right">
                <Path Stretch="Uniform" Fill="{DynamicResource ActiveForegroundBrushKey}" HorizontalAlignment="Center" Data="M71.048203,0 L93.770935,10.424871 152.85001,37.529528 171.02817,45.869425 230.10727,72.974085 252.82999,83.398958 238.23517,115.21076 215.51245,104.78589 187.73206,165.33783 188.45349,168.04767 C193.10251,186.74838 194.03778,207.59044 190.93973,229.09215 L190.71091,230.57726 104.44453,190.99945 45.929749,318.5421 27.751572,310.2022 86.266357,182.65956 0,143.08176 0.97650146,141.93968 C15.254585,125.5672 31.663315,112.68233 48.871078,104.00919 L51.395721,102.78861 79.176117,42.236681 56.453384,31.811808 z" />
            </ToggleButton>

            <rc:AppIcon />
            <TextBlock Style="{StaticResource TitleTextBlockStyle}" Text="{rb:StringResource Main.SessionTool_Title}" />
        </DockPanel>

        <Grid Margin="8" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal">
                <ToggleButton IsChecked="{Binding IsRecording}">
                    <Ellipse Width="12" Height="12">
                        <Ellipse.Style>
                            <Style TargetType="{x:Type Ellipse}">
                                <Setter Property="Fill" Value="{DynamicResource ForegroundBrushKey}" />

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsRecording}" Value="True">
                                        <Setter Property="Fill" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                </ToggleButton>

                <Button Command="{Binding ClearCommand}" Margin="4, 0, 0, 0">
                    <StackPanel Orientation="Horizontal">
                        <Path Data="{StaticResource CrossPathData}" Fill="{DynamicResource ForegroundBrushKey}" Stretch="Uniform" Width="14" Height="14" />
                        <TextBlock Text="{rb:StringResource Main.SessionTool_Clear}" Margin="2, 0, 0, 0" />
                    </StackPanel>
                </Button>

                <CheckBox IsChecked="{Binding AutoScroll}" Margin="4, 0, 0, 0">
                    <TextBlock Text="{rb:StringResource Main.SessionTool_Option_AutoScroll}" />
                </CheckBox>
                <CheckBox IsChecked="{rb:Preference Other.SessionTool.StartRecordingOnAppStartup}" Margin="4, 0, 0, 0">
                    <TextBlock Text="{rb:StringResource Main.SessionTool_Option_StartRecordingOnAppStartup}" />
                </CheckBox>
            </StackPanel>

            <ListView ItemsSource="{Binding Sessions}" Margin="0, 4, 0, 0" Loaded="ListView_Loaded" Grid.Row="1">
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
                        <Setter Property="Foreground" Value="{DynamicResource ActiveForegroundBrushKey}" />

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Source.Type}" Value="Normal">
                                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrushKey}" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Source.Type}" Value="Normal" />
                                    <Condition Binding="{Binding Source.State}" Value="Requested" />
                                </MultiDataTrigger.Conditions>

                                <Setter Property="Opacity" Value=".6" />
                            </MultiDataTrigger>

                            <DataTrigger Binding="{Binding Source.State}" Value="Error">
                                <Setter Property="Foreground" Value="Orange" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Source.State}" Value="Cached">
                                <Setter Property="Foreground" Value="Yellow" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source.State}" Value="LoadedFromCache">
                                <Setter Property="Foreground" Value="Green" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Width="70">
                            <TextBlock Text="{rb:StringResource Main.Record_Time}" />

                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Source.Time, StringFormat=HH:mm:ss}" Margin="0, 4" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn Width="70">
                            <TextBlock Text="{rb:StringResource Main.SessionTool_Method}" />

                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Source.Method}" Margin="0, 4" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="70">
                            <TextBlock Text="{rb:StringResource Main.SessionTool_Status}" />

                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Source.StatusCode}" Margin="0, 4" Visibility="{rb:CollapsedIfZero Source.StatusCode}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn Width="500">
                            <TextBlock Text="{rb:StringResource Main.SessionTool_URLOrAPI}" />

                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Name="URLOrAPI" Text="{Binding Source.DisplayUrl}" Margin="0, 4" />

                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Source.Type}" Value="Normal">
                                            <Setter TargetName="URLOrAPI" Property="FontWeight" Value="Bold" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>

        <ruic:ResizeGrip Grid.Row="1" />
    </Grid>
</ruic:MetroWindow>
