<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:rb="clr-namespace:Sakuno.KanColle.Amatsukaze;assembly=HeavenlyWind.Base"
                    xmlns:rc="clr-namespace:Sakuno.KanColle.Amatsukaze.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeavenlyWind;component/Styles/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type rc:LoSFormulas}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrushKey}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />

        <Setter Property="SelectedValue" Value="{rb:Preference Game.MainFleetLoSFormula}" />
        <Setter Property="SelectedValuePath" Value="Key.ID" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type rc:LoSFormulas}">
                    <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Name="DropDownMarkColumn" Width="0" />
                                </Grid.ColumnDefinitions>

                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{rb:StringResource Fleet_LoS, StringFormat={}{0}:}" />
                                    <ContentPresenter Content="{TemplateBinding SelectionBoxItem}" IsHitTestVisible="False">
                                        <ContentPresenter.ContentTemplate>
                                            <DataTemplate>
                                                <TextBlock Name="LoS" Text="{Binding Value, StringFormat={}{0:0.#}}" />

                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding Value, Converter={StaticResource IsGreaterThanOrEqualToConverter}, ConverterParameter=33}" Value="True">
                                                        <Setter TargetName="LoS" Property="Foreground" Value="Yellow" />
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ContentPresenter.ContentTemplate>
                                    </ContentPresenter>
                                </StackPanel>

                                <ToggleButton Name="ToggleButton" OverridesDefaultStyle="True" Foreground="{DynamicResource ActiveForegroundBrushKey}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Focusable="False" IsTabStop="False" Visibility="Collapsed" Grid.ColumnSpan="2">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Background="Transparent">
                                                <Border HorizontalAlignment="Right" Width="11">
                                                    <Path Fill="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" Data="M0,0 L3.5,4 7,0 z" />
                                                </Border>
                                            </Border>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                            </Grid>
                        </Border>

                        <Popup Name="PART_Popup" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Placement="Bottom" Focusable="False" FocusVisualStyle="{x:Null}" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                            <Border Background="{DynamicResource BackgroundBrushKey}" Grid.IsSharedSizeScope="True">
                                <ItemsPresenter />
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundBrushKey}" />
                            <Setter Property="Foreground" Value="{DynamicResource ActiveForegroundBrushKey}" />
                            <Setter TargetName="DropDownMarkColumn" Property="MinWidth" Value="13" />
                            <Setter TargetName="ToggleButton" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource BackgroundBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="OverridesDefaultStyle" Value="True" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="SnapsToDevicePixels" Value="True" />

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Border Background="{TemplateBinding Background}" Padding="6, 4" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="8" />
                                            <ColumnDefinition SharedSizeGroup="Formula" />
                                            <ColumnDefinition Width="8" />
                                            <ColumnDefinition SharedSizeGroup="LoS" />
                                        </Grid.ColumnDefinitions>

                                        <Path Name="CheckMark" Fill="{DynamicResource ForegroundBrushKey}" Stretch="Uniform" Width="12" Height="12" Margin="1" Visibility="Hidden" Data="F1 M10.2209,8.946 L17.1875,15.5167 30.9627,1.0440487E-53 34.2877,2.9292 17.5834,22.9585 6.8959,12.271 10.2209,8.946 z" />
                                        <TextBlock Text="{rb:EnumToStringResource Key.Name, Fleet_LoS_Formula}" Grid.Column="2" />
                                        <TextBlock Name="LoS" Text="{Binding Value, StringFormat={}{0:0.#}}" HorizontalAlignment="Right" Grid.Column="4" />
                                    </Grid>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                                    </Trigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Key.Name}" Value="Formula33" />
                                            <Condition Binding="{Binding Value, Converter={StaticResource IsGreaterThanOrEqualToConverter}, ConverterParameter=33}" Value="True" />
                                        </MultiDataTrigger.Conditions>

                                        <Setter TargetName="LoS" Property="Foreground" Value="Yellow" />
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HighlightBackgroundBrushKey}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>